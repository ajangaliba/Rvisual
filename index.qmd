---
title: "Rvisual"
---

# Verilerin Görselleştirilmesi

## Tarihçe

Veri görselleştirme yöntemleri yüzyıllardır kullanılmaktadır. 18. yy'da yaşamış olan İskoç mühendis William Playfair çubuk grafik, çizgi grafikk ve pasta grafiklerin öncüsü olmuştur. 19. yüzyılda da Florence Nightingale savaş zamanlarındaki sağlık koşullarını göstermek için "gül diyagramı"nı kullanmıştır.

20.nci yüzyılda ise bilgisayarlar gelişmiş ve veri görselleştirme hızlı bir ilerleme kaydetmiştir. 21. yüzyılda iseinteraktif görseller, büyük veri, yapay zeka ile birlikte bu alan daha önemli hale gelmiştir.

## Neden Önemlidir?

-   Sayısal veriler arasındaki ilişkilerin fark edilmesini,

-   Eğilimlerin, örüntülerin ve aykırı değerlerin tespitini kolaylaştırmaktadır.

-   Bir veri kümesinin en kullanışlı bilgilerinin vurgulanmasını sağlamaktadır.

## Hangi Veri ile Hangi Tip Grafik Kullanılır?

Veri türleri ile kullanılacak grafik tipi arasında doğrudan bir ilişki bulunmaktadır. Veri yapısına veya analiz amacına göre grafik türü seçilmesi önem taşımaktadır. Aşağıda yaygın veri türleri ve uygun grafik türleri özetlenmektedir.

### Kategorik Veriler (Nitel Veriler)

Kategorik veriler, sınıflandırmalar veya etiketlerden oluşmaktadır. Örneğin; cinsiyet, renk, şehir, vb.

Bu verilere uygun olan grafikler,

-   Çubuk Grafik (Barplot)

-   Pasta Grafik (Pie Chart)

### Sayısal Veriler (Nicel Veriler)

Bu veriler ölçülebilir değerlerdir. Örneğin; gelir, yaş, ağırlık, sıcaklık vb.

Bu verilere uygun olan grafikler;

-   Histogram

-   Kutu Grafiği (Boxplot)

### İki Sayısal Değişken Arasındaki İlişki

İki nicel değişkenin arasındaki ilişki incelenmek istendiğinde kullanılmaktadır.

Uygun Grafik;

-   Dağılım Grafiği (Scatter Plot)

### Zamana Bağlı Veriler (Zaman Serileri)

Zaman içinde değişen veriler için kullanılmakatdır.

Uygun Grafik;

-   Çizgi Grafiği (Line Chart)

### Grafik - Veri Türü Eşleşmeleri

```{r echo=FALSE, message=FALSE, warning=FALSE, paged.print=FALSE}
library(knitr)
Sys.setlocale("LC_ALL", "Turkish")

grafik_tablo <- data.frame(

  Grafik_Turu = c("Histogram", "Cubuk Grafik", "Pasta Grafigi", "Kutu Grafigi",

                  "Nokta Grafigi", "Çizgi Grafigi", "Facet (Alt grafik)"),

  Kullanilan_Degiskenler = c("yas veya gelir", 

                              "cinsiyet, sehir, calisiyor", 

                              "cinsiyet, sehir", 

                              "gelir ~ cinsiyet veya gelir ~ sehir", 

                              "yas ve gelir", 

                              "ay (zaman) ve gelir", 

                              "gelir ~ yas, facet_wrap(~ sehir)"),

  Veri_Turu = c("Surekli (sayısal)", 

                "Kesikli / Kategorik", 

                "Kategorik", 

                "Sayisal + Kategorik", 

                "Sürekli (iki sayisal degisken)", 

                "Zaman (kesikli) + Sayisal", 

                "Sayisal + Kategorik (alt grafik icin)"),

  Degisken_Sayisi = c("Tek degiskenli", "Tek degiskenli", "Tek degiskenli", 

                      "İki degiskenli", "İki degiskenli", "İki degiskenli", "Cok degiskenli"),

  Aciklama = c("Surekli bir degisenin dagilimini gosterir",

               "Kategorik degiskenin frekans dagilimi",

               "Gruplarin oransal dagilimi",

               "Gruplara gore dagilim ve aykiri degerler",

               "Degiskenler arasi iliskiyi gosterir",

               "Zamana bagli degisim",

               "Her kategori icin ayri grafikler")

)

kable(grafik_tablo, caption = "Hangi Tur Veri ile Ne Tip Gorsel Kullanilir?")
```

## Eksenler ve Etiketler

Veriler görselleştrilirken oluşturulan grafiğin doğru anlaşılabilmesi amacıyla **eksenler** (x ve y) ve bu eksenlere ait **etiketler** (açıklayıcı metinler) büyük önem taşımaktadır.

**Eksenler:** veri değerlerinin nerede konumlandığını gösterirken

**Etiketler:** neyin neye karşı çizildiğini anlatmaktadır

X ekseninde genellikle bağımsız değişken yer alır. Bağımsız değişken bir deneye veya analizde diğer değişkenleri etkilediği düşünülen, araştırmacı tarafından kontrol /manipüle edilen değişkendir. Daha basit bir şekilde ifade etmek gerekirse "neden" ya da "etki yaratan" değişken denilebilir..

Y ekseninde isew genellikle bağımlı değişken bulunmaktadır. Bağımlı değişken bir deney/analizde bağımsız değişkenin etkisi ile değiştiği düşünülen ve ölçülen değişkendir. Basitçe "sonuç", ya da "etkilenen" değişken olarak görülebilir.

**Örneğin** sulama miktarının bir bitkinin büyüme hızına etkisi araştırılıyorsa;

-   *Bağımsız Değişken:* Sulama miktarı (örn; 500ml, 1000ml)

-   *Bağımlı Değişken:* Bitkinin büyüme hızı (örn: günlük 3mm, aylık 4 cm)

```{r echo=FALSE}

x <- c("A", "B", "C")
y <- c(10, 15, 12)

barplot(y, names.arg = x, main = "Gruplara Gore Ortalama Puan", 
        xlab = "Gruplar, eksen x", ylab = "Puan, eksan y", col = "skyblue")
```

***Öneriler:***

1.  Etiketlerde Gelir (TL), Sıcaklık (°C) gibi birimlerin belirtilmesi anlamayı kolaylaştırmaktadır.
2.  Eksensiz veya etiketsiz grafikler, görsel oluşsa da **anlamsız** olabilmektedir.
3.  Grafik başlığı olmadan verilen mesaj eksik kalabilmektedir.

## Base R ile Verilerin Görselleştirilmesi

Ölçüm, sayım, deney, gözlem ya da araştırma yolu ile elde edilen nitel ve nicel verilerden oluşan veri setlerinin anlaşılması ve yorumlanmasında veri görselleştirmesi yöntemleri kullanılmaktadır. Veri görselleştirmesi grafik, tablo, harita gibi yöntemlerin kulanılması yolu ile verilerin yorumlanmasını kolaylaştırmayı sağlamaktadır. Görselleştirme hem analizlerin daha estetik görünmesini sağlamaktadır hem de verilerin hızlı anlaşılmasını sağlayarak keşif, ve karar alma süreçlerini kolaylaştırmaktadır.

## Örnek Veri Seti ile Grafik Türlerinin Uygulanması

Bu bölümde gerçek hayatta karşılaşabileceğimiz türden, yapay bir veri seti olan gelir_calisma kullanılarak farklı grafik türlerinin nasıl oluşturulduğu gösterilecektir. Veri setinin R'a yüklenmesi için gerekli kodlar aşağıda verilmektedir.

```{r echo=TRUE}
veri <- read.csv("gelir_calisma.csv")

# veri

head(veri) # veri setinin ilk 5 satırını göstermek için kullanılmıştır. yalnızca veri yazılarak çalıştırılsaydı, R tüm veri setini gösterebilirdi. Burada veri yapısını kısaca görmek amacıyla kullnaılmıştır head fonksiyonu.
```

Görüldüğü gibi, veri setinde farklı değişken türleri bulunmaktadır.

-   ***Sayısal değişkenler:*** yas, gelir

-   ***Kategorik değişkenler:*** cinsiyet, calisma_durumu

-   ***ID niteliği taşıyan:*** isim

Bu değişkenler, farklı türlerde veriler olup, her veri türünün kendine uygun bir grafik oluşturmada kullanılması önem taşımaktadır. Yukarıda veri tipi-grafik önerileri zaten yapılmış olup, aşağıda bu veriler ile oluşturulmuş örnek grafikler sunulmaktadır.

### 1. Histogram Grafiği Oluşturulması

Histogram grafiği, sayısal (nicel) verilerin dağılımını görselleştirmek için kullanılan bir grafik türüdür. Verilerin sıklıklarını (ne kadar sık meydana geldiklerini) belirli aralıklara (bin, yüz) bölerek göstermektedir. Her bir çubuk, belirli bir değer aralığındaki veri noktalarının sayılarını temsil etmektedir.

-   Sayısal verilerini dağılımını anlamak için,

-   Verilerin yoğunlaştığı bölgeleri, aykırı değerleri veya eğilimleri görmek için kullanılmakatdır.

Çubuk grafik, görsel olarak histogram grafiğine benzer bir grafiktir. Ancak histogramda çubuklar birbirine bitişik oluşmaktadır. Sayısal verilerin sıklık dağılımını görselleştirmektedir. R2da histogram grafiği oluşturmak için "hist" fonksiyopnu kullanılmaktadır.

```{r echo=TRUE}
# Yaşların Dağılımı
hist(veri$yas,
     col = "lightblue",
     main = "Yaşların Dağılımı",
     xlab = "Yaş",
     ylab = "Kişi Sayısı")
```

Ayrıca bu histogram grafiğine yoğunluk eğrisi eklenmesi aşağıdaki şekilde mümkün olmaktadır. Burada freq = FALSE ile histogram çubuklarının yüksekliği kişi sayısını değil yoğunluğu ifade etmeye başlarken, lines(density(...)) fonksiyonu ise histogram üzerine bir yoğunluk eğrisi çizmektedir.

```{r message=FALSE, warning=FALSE}
hist(veri$yas,
     col = "lightblue",
     main = "Yaşların Dağılımı",
     xlab = "Yaş",
     ylab = "Yoğunluk",
     freq = FALSE)  # Sayı yerine yoğunluk

lines(density(veri$yas), 
      col = "darkblue", 
      lwd = 2)  # Yoğunluk eğrisi
```

\-- Veri setindeki başka hangi değişken ile histogram grafiği oluşturulabilir?

### 2. Kutu (Boxplot) Grafiği

**Kutu Grafiği** sayısal (nicel) verilerin dağılımını, merkezi eğilimini, yayılımını ve aykırı değerlerini görselleştirmek için kullanılan bir grafik türüdür. Verilerin istatistiksel özetini bir grafikte göstermeyi sağlar ve farklı grupların karşılaştırılmasında etkilidir.

Bir kutu grafiği aşağıdaki istatistikleri özetlemektedir;

1.  En küçük değer (minimum)
2.  Birinci çeyrek (Q1)
3.  Medyan (Q2)
4.  Üçüncü Çeyrek (Q3)
5.  En büyük değer (maksimum)

R'da boxplot grafiği oluşturmak için "boxplot" fonksiyonu kullanılmaktadır.

```{r echo = TRUE}
boxplot(veri$gelir,
        main = "Gelir Dağılımı",
        ylab = "Gelir (TL)",
        col = "salmon")

```

**Not:** grafikteki alt çizgi min, kutunun alt sınırı q1, ortadaki siyah çizgi medyan, kutunun üst sınırı q3, üst çizgi max değeri ifade etmektedir.

Histogram grafiği verilierin sıklık dağılımını gösterir, grupları karşılaştırmak zordur. Ancak boxplot verilerin özet istatistiklerini gösterir ve grupları karşılaştırmak içn daha uygundur. Eğer veride aykırı bir değer bulunursa aykırı değerleri temsil eden noktalar oluşmaktadır.

Grupların karşılaştırılmasına örnek olarak ise cinsiyete göre gelir dağılımı grafiği verilebilir. Aşağıda una örnek bir grafiğin nasıl oluşturulacağı gösterilmektedir.

```{r echo = TRUE}
boxplot(gelir ~ cinsiyet,
        data = veri,
        main = "Cinsiyete Gore Gelir Dagilimi",
        ylab = "Gelir (TL)",
        col = c("pink", "lightblue", "gray"))
```

### 3. Çubuk (Barplot) Grafiği

Genellikle kategorik verilerin görselleştirilmesinde tercih edilmektedir. Barplot adı da verilen çubuk grafiği her bir kategori için bir çubuk çizmektedir ve çubukların yüksekliği, o kategoriye karşılık gelen değerin büyüklüğünü temsil etmektedir.

**Çubuk Grafiğin Özellikleri:**

1.  X - Ekseni kategorik verileri göstermektedir. (örn: şehirler, gruplar)
2.  Y - Ekseni her kategoriye ait sayısal değeri göstermektedir. (frekans, toplam, ortalama vb)
3.  Çubuklar histogramdan farklı şşekilde aralıklı oluşmaktadır.
4.  Kategorik verilerin karşılaştırılmasını kolaylaştırmayı amaçlamaktadır.

R'da çubuk grafiği çizmek için "barplot" fonksiyonu kullanılmaktadır.

Aşağıda Cinsiyete Göre kişi sayısını gösteren çubuk grafiğin oluşturulmasına yönelik kodlar bulunmaktadır.

```{r echo = TRUE}
table_cinsiyet <- table(veri$cinsiyet) # bu fonksiyon her kategoride kaç gözlem olduğunu saymaktadır.
barplot(table_cinsiyet,
        col = c("pink", "skyblue", "lightgray"),
        main = "Cinsiyete Göre Dağılım",
        xlab = "Cinsiyet",
        ylab = "Kişi Sayısı")


```

### 4. Dağılım Grafiği (Scatter Plot)

Dağılım grafiği iki nicel değişken arasındaki ilişkiyi ve yayılımı analiz etmek için kullanılan bir analiz türüdür. X ekseni bağımsız değişkeni Y ekseni ise bağımlı değişkeni temsişl etmektedir. Her veri noktası bu iki değişken in bir kombinasyonunu göstermektedir. Bu grafikler eğilimleri (pozitif ya da negatif korelasyon) ve aykırı değerleri tespit etmek için idealdir.

Aşağıda veri setinde bulunan yaş ve gelir verilerinin arasındaki ilişkiyi gösterir scatter plot örneği bulunmaktadır.

```{r echo = TRUE}
plot(veri$yas, veri$gelir,
     main = "Yaş ve Gelir İlişkisi",
     xlab = "Yaş",
     ylab = "Gelir (TL)",
     pch = 19,
     col = "darkblue")
```

Bu grafiğe eğilim çizgisi eklenmesi de aşağıdaki şekilde mümkün olmaktadır,

```{r message=FALSE, warning=FALSE}
plot(veri$yas, veri$gelir,
     main = "Yaş ve Gelir İlişkisi",
     xlab = "Yaş",
     ylab = "Gelir (TL)",
     pch = 19,
     col = "darkblue")

model <- lm(gelir ~ yas, data = veri)

abline(model, col = "black", lwd = 2)


```

# ggplot2 ile Verilerin Görselleştirilmesi

## Grammer of Graphics (Grafik Dili)

Grafik Dili (Grammer of Graphics) veri görselleştirmesini sistematik ve modüler şekilde tanımlayan bir kavramsal çerçeve olup ilk olarak 1999 yılında Leland Wikinson tarafından yayınlanan *The Grammer of Graphics* kitabında tanıtılmıştır. ggplot2 gibi modern veri görselleştirme araşlarının temelini oluşturmaktadırç

### Temel Kavramlar

Grafik dili bir grafiği oluşturan temel bileşenleri bir "dil" gibi ele almaktadır. Bu bileşenler aşağıda sıralanmaktadır;

**1. Veri (Data):** Görselleştirilecek ham verilerdir. (data = veri)

**2. Değişken Atamaları (Mappings):** Verinin grafik öğelerinin nasıl eşleneceğini tanımlamaktadır. (x - ekseni, y - ekseni, renk vb.) (aes(x = yaş, y = gelir, color = şehir) ile yaş x-eksenine, gelir y-eksenine, şehir ise renge atanır.)

**3. Geometrik Nesneler (Geoms):** Veriyi görselleştirmek için kullanılan şekiller( örneğin çubuklar, noktalar, çizgiler) (geom_point() dağılım grafiği, geom_line() çizgi grafiği oluşturur.) Mappings veriyi nasıl görsel olarak temsik edeceğini belirlerken geoms görselleştirmenin "şeklini" oluşturmaktadır.

**4. Estetik Özellikler:** Görsel özellikleri ( renk, boyut, şekil) belirler ve değişkenlerle ilişkilendirir. ( örneğin bir değişkeni renge bağlayarak farklı kategorileri ayırt etmeyi sağlar. aes(color = sehir) yazılırsa her şehir farklı renkte gösterilebilmektedir.)

**5. İstatistiksel Dönüşümler (Stats):** Veriye uygulanan özetlemeler veya dönüşümler (örn; ortalama, yoğunluık tahmini) ( stat_summary() ile ehr grup için ortalama hesaplanabilmektedir. Verinin ham haliyle kullanılması yerine, stats veriyi özetleyerek dönüştürmektedir. Örneğin histogramda yoğunluk tahmini gibi işlemleri içermektedir.

**6. Koordinat Sistemi (Coordinates):** Verinin nasıl düzenleneceğini tanımlamaktadır (kartezyen, polar en sık kullanılanlardır.)

Kartezyen koordinat sistemi: X ve Y eksenlerinin dik açılarla kesiştiği geleneksel koordinat sistemi olup; dağılım,,çubuk gibi pek çok grafik bu sistemi kullanmaktadır. coord_cartesian()

Polar koordinat sistemi: dairesel bir düzenleme kullanmaktadır. mesafe (R) ve açı (θ) ile veri temsil edilmektedir. Pasta ya da radar grafikler bu sistemle oluşturulmaktadır. coord_polar()

**7. Fasetleme (Facets):** Veriyi alt gruplara bölerek biren fazla grafik oluşturmaktadır. facet_wrap(\~şehir) ile her şehir için ayrı bir grafik oluşturulur.

**8. Tema ve Düzen (Themes):** Görsel ve stil etiketleri özelleştirir. Font, arka plan, etiketler gibi görsel stilleri ve düzeni özelleştirmektedir. theme_minimal()

**9. Etiketler:** Başlık eksen adı ve açıklamaların atanmasını sağlamaktadır. labs(title = "Yaş ve Gelir İlişkisi", x = "Yaş", y = "Gelir (TL)") gibi.

theme_minimal()

Bu bileşenler birbiriyle katmanlar halinde birleşerek grafiği oluşturmaktadır.

## ggplot2 ile Örnek Grafikler

Grafiklerin oluşturulabilmesi için öncelikle verinin içeri aktarılması gerekmektedir.

```{r}
library(ggplot2)   # Grafikler için

data <- read.csv("ggplotverisi.csv")
```

Yukarıdaki şekilde veri içeri aktarıldıktan ve ggplot2 paketi çağırıldıktan sonra çeşitli grafiklerin oluşturulması mümkün olmaktadır.

### 1.Histogram Grafiği

Aşağıda yaş dağılımını gösteren histogram grafiği oluşturulmaktadır. **ggplot(data, aes(x = yas))** kısmı veri seti içinden yas değişkenini X eksenine eşleştirmektedir.

**geom_histogram(bindwidth = 5):** 5 yaş aralıklı histogram çizmektedir.

**fill = "skyblue"** çubukların iç rengini belirlemektedir.

**color = "black"** çubukların kenar çizgisini siyah yapmaktadır.

**labs(...)** kısmı başlık x ve y eksenlerini tanımlamaktadır.

```{r}
ggplot(data, aes(x = yas)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  labs(title = "Yaş Dağılımı", x = "Yaş", y = "Frekans")
```

Grafik veri setindeki bireylerin yaşları nasıl dağılmış, hangi yaş grubu daha sık sorularına cevap vermektedir.

Histogram grafiğine yoğunluk eğrisi eklenmesi de mümkün olmaktadır. Bu aşağıdaki kkodlar ile gerçekleştirilebilmektedir.

```{r}
ggplot(data, aes(x = yas)) +
  geom_histogram(aes(y = ..density..),    # Histogram yogunluk (density) olceginde
                 binwidth = 5,
                 fill = "skyblue",
                 color = "black",
                 alpha = 0.6) +
  geom_density(color = "red", size = 0.5) +  # Yogunluk eğrisi
  labs(title = "Yas Dagılımı ve Yogunluk Egrisi",
       x = "Yas",
       y = "Yogunluk")
```

### 2. Çubuk Grafik

Aşağıda cinsiyete göre kişi sayısını gösteren çubuk grafik oluşturulmaktadır.

**aes(x = cinsiyet)** ile kategorik bir değişken olan cinsiyet x eksenine yerleştirilmektedir.

**geom_bar():** her cinsiyet içi otomati olarak kisi sayısını (frekansı) sayarak çubuk olarak göstermektedir.

**fill = "orange"** çubukların içini turuncu yapmaktadır.

```{r}
ggplot(data, aes(x = cinsiyet)) +
  geom_bar(fill = "orange") +
  labs(title = "Cinsiyete Göre Dağılım", x = "Cinsiyet", y = "Kişi Sayısı")
```

Grafik veri setinde kaç kadın kaç erkek bulunduğu sorusunu cevaplamaktadır.

### 3. Kutu Grafiği

Aşağıda cinsiyete göre geliri gösteren kutu grafiği oluşturma adımları gösterilmektedir.

**(aes(x = cinsiyet, y= gelir):** x ekseninde cinsiyeti gösteren gruplar, y ekseninde ölçülen değer (gelir) konumlandırılmaktadır.

**geom_boxplot():** her grup için minimum, 1. çeyrek, medyan, 3. çeyrek ve maksimum değerleri göstermektedir.

**fill = "lightgreen"** kutunun renginin açık yeşil olmasını sağlamaktadır.

```{r}
ggplot(data, aes(x = cinsiyet, y = gelir)) +
  geom_boxplot(fill = "lightgreen") +
  labs(title = "Cinsiyete Göre Gelir Dağılımı", x = "Cinsiyet", y = "Gelir")
```

Grafik kadın ve erkekler arasında gelir farkı olup olmadığını ortaya koymakta ve varsa aykırı değerleri göstermektedir.

### 4. Nokta Grafiği

Aşağıda yaş ve gelir ilişkisini ortaya koyan nokta grafiği oluşturulmaktadır.

**aes(x = yas, y = gelir)** her bireyin yaşı ve geliri koordinat sistemine yerleştirilmektedir.

**geom_point():** nokta grafiği çizmektedir.

**alpha = 0.7:** noktaların saydamlığını belirlemektedir. (0: şeffaf, 1: opak)

**color = "purple"** noktaların rengini mor yapmaktadır.

```{r}
ggplot(data, aes(x = yas, y = gelir)) +
  geom_point(alpha = 0.7, color = "purple") +
  labs(title = "Yaş ve Gelir İlişkisi", x = "Yaş", y = "Gelir")
```

Grafik yaş arttıkça gelir artıyor mu? Arada bir ilişki var mı sorusuna cevap vermeyi amaçlamaktadır.

Ayrıca grafikteki noktalar mor yerine şehir/cinsiyet gibi değişkenlere göre ayarlanacak şekilde belirlenebilmektedir. bunun için color ="purple" kısmı silinerek aes kısmına col = sehir, ya da col = cinsiyet parametresi eklenebilmektedir.

```{r}
ggplot(data, aes(x = yas, y = gelir, col = sehir)) +
  geom_point(alpha = 0.7) +
  labs(title = "Yaş ve Gelir İlişkisi", x = "Yaş", y = "Gelir")
```

Bu garfiğin eğilimini göstermek için aşağıdaki kodların eklenmesi yeterli olacaktır:

```{r}
ggplot(data, aes(x = yas, y = gelir)) +
  geom_point(alpha = 0.7, color = "purple") +    # Noktalar
  geom_smooth(method = "lm", se = TRUE, color = "red") +  # Eğilim çizgisi (linear model)
  labs(title = "Yaş ve Gelir İlişkisi (Eğim Çizgisi ile)",
       x = "Yaş",
       y = "Gelir")
```

**geom_smooth(method = "lm"** ile doğrusal regresyon eğrisi çizilmektedir.

**se = TRUE** standart hata bantlarını (güven aralığı) göstermektedir.

### 5. Çizgi Grafiği

Aşağıda yıla göre ortalama geliri gösteren çizgi grafiğinin çizilmesine ilişkin örnek sunulmaktadır.

Öncelikle veride bulunan gelir başlığının yıllara göre ortalamasının hesaplanması, daha sonra bu ortalamalara göre çizgi grafiğinin oluşturulması gerekmektedir.

**group_by(ay)** veriyi yıllara göre gruplamaktadır.

**summarise()** her yıl için ortalama gelir hesaplamaktadır.

**geom_line()** noktaları birleştiren çizgi grafiği çizmektedir.

**geom_point()** çizgi üzerindeki her nokta verideki alınan ortalama değeri temsil etmektedir.

**group = 1** tek bir çizgi çizeceğini belirtmektedir (ÖNEMLİ !!)

```{r message=FALSE, warning=FALSE}
library(dplyr)

veri_yillik <- data %>%
  group_by(yil) %>%
  summarise(ortalama_gelir = mean(gelir, na.rm = TRUE))

ggplot(veri_yillik, aes(x = yil, y = ortalama_gelir)) +
  geom_line(group = 1, color = "blue", size = 1.2) +
  geom_point(color = "blue", size = 2) +
  scale_x_continuous(breaks = 2020:2025) +  # Yılları tam sayı olarak ayarla
  labs(title = "Yıla Göre Ortalama Gelir", x = "Yıl", y = "Ortalama Gelir (TL)")
```

Grafik yıl yıl ortalama gelirin nasıl değiştiğini göstermektedir.

### 6. Facet

Alt grafik oluşturulması için facet yöntemi kullanılmaktadır. her şehirde yaş dağılımı aynı mı? bazı şehirlerde genç nüfus baskın mı sorunlarının cevaplarına ulaşmayı kolaylaştırmaktadır.

**facet_wrap(\~ sehir)** her şehir için ayrı bir küçük histogram çizmektedir. (facias)

**bindwidth = 5** 5 yaş aralıklı histogram çizmektedir.

```{r}
ggplot(data, aes(x = yas)) +
  geom_histogram(binwidth = 5, fill = "lightcoral", color = "black") +
  facet_wrap(~ sehir) +
  labs(title = "Şehirlere Göre Yaş Dağılımı", x = "Yaş", y = "Frekans")
```
